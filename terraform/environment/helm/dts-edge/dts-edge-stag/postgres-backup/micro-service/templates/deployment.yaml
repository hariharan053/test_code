apiVersion: v1
kind: Secret
metadata:
  name: db-secret
data:
  username: YWRtaW4=
  password: dGVzdDEyMzQ=
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ .Values.microService.name }}"
spec:
#Cron Time is set according to server time, ensure server time zone and set accordingly.
  schedule: "*/60 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: "{{ .Values.microService.name }}"
            image: {{ .Values.microService.image }}
            volumeMounts:
            - name: secret-volume
              mountPath: /etc/secret-volume
            resources:
              requests:
                memory: "4Gi"
                cpu: "2"
              limits:
                memory: "4Gi"
                cpu: "2"
            env:
              - name: S3_BUCKET
                value: "{{ .Values.microService.S3_BUCKET }}"
              - name: AWS_DEFAULT_REGION
                value: "us-east-1"
              - name: APPLICATION_DB_HOST
                value: "{{ .Values.microService.APPLICATION_DB_HOST }}"
              - name: port_postgres
                value: "{{ .Values.microService.port }}"
              - name: APPLICATION_DB_USER
                value: "{{ .Values.microService.APPLICATION_DB_USER }}"
              - name: APPLICATION_DB_PASSWORD
                value: "{{ .Values.microService.APPLICATION_DB_PASSWORD }}"
            imagePullPolicy: IfNotPresent
            args:
            - /bin/bash
            - -c
            - cd /home/root; ls; bash postgres-backup.sh;
          volumes:
          - name: secret-volume
            secret:
              secretName: db-secret
          restartPolicy: OnFailure
          imagePullSecrets:
          - name: regcred
      backoffLimit: 3
status: {}
